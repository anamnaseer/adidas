plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

configurations {
    cucumberRuntime {
        extendsFrom testRuntime
    }
}

ext {
    allureVersion = '2.14.0'
    junitVersion = '5.7.1'
}

sourceCompatibility = '11'
targetCompatibility = '11'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    compile('org.seleniumhq.selenium:selenium-java:4.1.2')
    compile('io.github.bonigarcia:webdrivermanager:5.0.2')
    compile('org.assertj:assertj-core:3.22.0')
    compile("ch.qos.logback:logback-classic:1.2.10")
    compile("org.slf4j:slf4j-api:1.7.36")

    // cucumber
    implementation("io.cucumber:gherkin:22.0.0")
    compile("io.cucumber:cucumber-java:7.2.3")
    implementation('io.cucumber:cucumber-core:7.2.3')
    implementation('io.cucumber:cucumber-junit:7.2.3')

    testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

    //rest-assured
    compile("io.rest-assured:rest-assured:4.5.1")
    compile("io.rest-assured:json-schema-validator:4.5.1")
    compile("io.rest-assured:rest-assured-all:4.5.1")
    compile("com.googlecode.json-simple:json-simple:1.1.1")
}

test {
    useJUnitPlatform()
}
allure {
    autoconfigure = true
    version = "${allureVersion}"

    useJUnit5 {
        version = "${allureVersion}"
    }
}
task sanity() {
    dependsOn assemble, testClasses
    doLast {
        javaexec {
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            args = ['--plugin', 'html:target/cucumberReports/Report.html', '--plugin', 'json:target/cucumberReports/cucumber.json', '--glue', 'com.example.adidas.stepDefinitions', 'src/test/resources', '--tags', '@test']
        }
    }
}